for (f in fl){
scabun = read.csv(paste0(path_output, f), sep = "\t")
#print(f)
#print(colnames(scabun))
abun = rbind(abun, scabun)
ncol(scabun)
}
abun = abun[-1,]
# do some renaming
nm = c(abun["ct"])
ctypes = ""
for (i in nm){
ctypes = c(ctypes, paste(sapply(strsplit(i, "_"), "[[", 3),sapply(strsplit(i, "_"), "[[", 4), sep = "_"))
}
ctypes = ctypes[-1]
abun["ct"] = ctypes
# first checks general changes in abundances in all samples (ex. b cells)
by_vs_am <- abun %>% group_by(sample, ct, section)
by_vs <- by_vs_am %>% summarise(meanct = mean(Avg))
for (j in unique(by_vs$ct)){
by_vs_ct = by_vs[by_vs$ct == j,]
print(paste0("checking cell type: ", j))
for (i in 1:6){
print(paste0("RA",i))
if (length(by_vs_ct[by_vs_ct$sample == paste0("RA",i),]$meanct)==0) next
if (t.test(by_vs_ct[by_vs_ct$sample == paste0("RA",i),]$meanct,by_vs_ct[by_vs_ct$sample != paste0("RA",i),]$meanct, alternative = "greater")$p.value < 0.05){
print("significant")
}
}
}
# first checks general changes in abundances in infiltrates (ex. b cells)
by_vs_am <- abun %>% group_by(sample, ct, section, inf)
newinf = ""
for (i in by_vs_am$inf){
newinf = c(newinf,substr(i, start = 1, stop = 3))
}
newinf = newinf[-1]
by_vs_am$inf = newinf
by_vs_am = by_vs_am[by_vs_am$inf == "inf",]
by_vs <- by_vs_am %>% summarise(meanct = mean(Avg))
for (j in unique(by_vs$ct)){
by_vs_ct = by_vs[by_vs$ct == j,]
print(paste0("checking cell type: ", j))
for (i in 1:6){
print(paste0("RA",i))
if (length(by_vs_ct[by_vs_ct$sample == paste0("RA",i),]$meanct)==0) {
print("no cells")
next}
if (t.test(by_vs_ct[by_vs_ct$sample == paste0("RA",i) & by_vs_ct$inf == "inf",]$meanct,by_vs_ct[by_vs_ct$sample != paste0("RA",i),]$meanct, alternative = "greater")$p.value < 0.05){
print("significant")
}
}
}
# first checks general changes in abundances in Rest (ex. b cells)
by_vs_am <- abun %>% group_by(sample, ct, section, inf)
newinf = ""
for (i in by_vs_am$inf){
newinf = c(newinf,substr(i, start = 1, stop = 3))
}
newinf = newinf[-1]
by_vs_am$inf = newinf
by_vs_am = by_vs_am[by_vs_am$inf == "res",]
by_vs <- by_vs_am %>% summarise(meanct = mean(Avg))
for (j in unique(by_vs$ct)){
by_vs_ct = by_vs[by_vs$ct == j,]
print(paste0("checking cell type: ", j))
for (i in 1:5){
print(paste0("RA",i))
if (length(by_vs_ct[by_vs_ct$sample == paste0("RA",i),]$meanct)==0) {
print("no cells")
next}
if (t.test(by_vs_ct[by_vs_ct$sample == paste0("RA",i) & by_vs_ct$inf == "res",]$meanct,by_vs_ct[by_vs_ct$sample != paste0("RA",i),]$meanct, alternative = "greater")$p.value < 0.05){
print("significant")
}
}
}
# first checks general changes in abundances in all samples (ex. b cells)
by_vs_am <- abun %>% group_by(sample, ct, section)
by_vs <- by_vs_am %>% summarise(meanct = mean(Avg))
for (j in unique(by_vs$ct)){
by_vs_ct = by_vs[by_vs$ct == j,]
print(paste0("checking cell type: ", j))
for (i in 1:6){
print(paste0("RA",i))
if (length(by_vs_ct[by_vs_ct$sample == paste0("RA",i),]$meanct)==0) next
if (t.test(by_vs_ct[by_vs_ct$sample == paste0("RA",i),]$meanct,by_vs_ct[by_vs_ct$sample != paste0("RA",i),]$meanct, alternative = "two-sided", paired = F, var.equal = T)$p.value < 0.05){
print("significant")
}
}
}
# first checks general changes in abundances in all samples (ex. b cells)
by_vs_am <- abun %>% group_by(sample, ct, section)
by_vs <- by_vs_am %>% summarise(meanct = mean(Avg))
for (j in unique(by_vs$ct)){
by_vs_ct = by_vs[by_vs$ct == j,]
print(paste0("checking cell type: ", j))
for (i in 1:6){
print(paste0("RA",i))
if (length(by_vs_ct[by_vs_ct$sample == paste0("RA",i),]$meanct)==0) next
if (t.test(by_vs_ct[by_vs_ct$sample == paste0("RA",i),]$meanct,by_vs_ct[by_vs_ct$sample != paste0("RA",i),]$meanct, alternative = "two.sided", paired = F, var.equal = T)$p.value < 0.05){
print("significant")
}
}
}
# first checks general changes in abundances in Rest (ex. b cells)
by_vs_am <- abun %>% group_by(sample, ct, section, inf)
newinf = ""
for (i in by_vs_am$inf){
newinf = c(newinf,substr(i, start = 1, stop = 3))
}
newinf = newinf[-1]
by_vs_am$inf = newinf
by_vs_am = by_vs_am[by_vs_am$inf == "res",]
by_vs <- by_vs_am %>% summarise(meanct = mean(Avg))
for (j in unique(by_vs$ct)){
by_vs_ct = by_vs[by_vs$ct == j,]
print(paste0("checking cell type: ", j))
for (i in 1:5){
print(paste0("RA",i))
if (length(by_vs_ct[by_vs_ct$sample == paste0("RA",i),]$meanct)==0) {
print("no cells")
next}
if (t.test(by_vs_ct[by_vs_ct$sample == paste0("RA",i) & by_vs_ct$inf == "res",]$meanct,by_vs_ct[by_vs_ct$sample != paste0("RA",i),]$meanct, alternative = "greater")$p.value < 0.05){
print("significant")
}
}
}
# plot all density sc plots after all samples have been analyzed
by_vs_am <- abun %>% group_by(sample, ct, section, inf)
by_vs_am = abun%>%
mutate(serostatus = case_when(
endsWith(sample, "1") ~ "seropositive",
endsWith(sample, "2") ~ "seropositive",
endsWith(sample, "3") ~ "seropositive",
endsWith(sample, "4") ~ "seronegative",
endsWith(sample, "5") ~ "seronegative",
endsWith(sample, "6") ~ "seronegative"
))
counter = 1
for (j in unique(by_vs_am$ct_short)){
print(j)
meltedsub = by_vs_am[by_vs_am$ct_short == j,]
meltedsub = meltedsub[meltedsub$cluster == "inf",]
myplots[[counter]] <- ggplot(meltedsub, aes(Avg, y = factor(ct, levels = paste0("celltype_", 1:length(unique(meltedsub$ct)))), fill = serostatus)) +
ggridges::geom_density_ridges(alpha = 0.5) +
scale_x_continuous(limits = c(0, 15)) +
labs(y = j) +
scale_fill_manual(values = c("seropositive" = "#CC6677","seronegative" = "#4477AA")) +
theme_minimal()
counter = counter + 1
}
by_vs_am$ct
myplots <- vector("list", length(unique(by_vs_am$ct)))
for (j in unique(by_vs_am$ct_short)){
print(j)
meltedsub = by_vs_am[by_vs_am$ct_short == j,]
meltedsub = meltedsub[meltedsub$cluster == "inf",]
myplots[[counter]] <- ggplot(meltedsub, aes(Avg, y = factor(ct, levels = paste0("celltype_", 1:length(unique(meltedsub$ct)))), fill = serostatus)) +
ggridges::geom_density_ridges(alpha = 0.5) +
scale_x_continuous(limits = c(0, 15)) +
labs(y = j) +
scale_fill_manual(values = c("seropositive" = "#CC6677","seronegative" = "#4477AA")) +
theme_minimal()
counter = counter + 1
}
save_plot(paste0(path_output,"Average_SC_inf_samples_density.pdf"), plot_grid(plotlist=myplots), ncol = 4, nrow = 4)
by_vs_am
write.table(by_vs_am, file =  "/Users/sanjavickovic/Desktop/morphoSPOT/Manuscript_Nov2021/figshare/Fig4c.csv", sep = ",", quote = F)
fig = read.delim("/Users/sanjavickovic/Desktop/morphoSPOT/Manuscript_Nov2021/figshare/Figure5_data.csv", row.names = 1)
fig
fig = read.delim("/Users/sanjavickovic/Desktop/morphoSPOT/Manuscript_Nov2021/figshare/Figure5_data.csv", row.names = 1, header = T)
fig
fig = read.delim("/Users/sanjavickovic/Desktop/morphoSPOT/Manuscript_Nov2021/figshare/Figure5_data.csv", row.names = 0, header = T)
fig
row.names(fig)
c.names(fig)
fig = read.delim("/Users/sanjavickovic/Desktop/morphoSPOT/Manuscript_Nov2021/figshare/Figure5_data.csv", row.names = 0, header = T, sep = ",")
fig = read.delim("/Users/sanjavickovic/Desktop/morphoSPOT/Manuscript_Nov2021/figshare/Figure5_data.csv", row.names = 1, header = T, sep = ",")
fig = read.delim("/Users/sanjavickovic/Desktop/morphoSPOT/Manuscript_Nov2021/figshare/Figure5_data.csv",header = T, sep = ",")
head(fig)
plot(fig$tSNE1, fig$tSNE2, col = fig$Percent_Touching)
ggplot(fig, aes(x=tSNE1, y=tSNE2)) + geom_point()
ggplot(fig, aes(x=tSNE1, y=tSNE2, color = Percent_Touching)) + geom_point()
ggplot(fig, aes(x=tSNE1, y=tSNE2, color = Percent_Touching)) + geom_point(palette="Spectral")
ggplot(fig, aes(x=tSNE1, y=tSNE2, color = Percent_Touching)) +
geom_point() +
scale_fill_brewer(palette="Spectral")
ggplot(fig, aes(x=tSNE1, y=tSNE2, color = Percent_Touching)) +
geom_point() +
scale_color_brewer(palette="Spectral")
ggplot(fig, aes(x=tSNE1, y=tSNE2, color = Percent_Touching)) +
geom_point() +
scale_color_continuous(type = "viridis")
#fig4a
ggplot(fig, aes(x=tSNE1, y=tSNE2, color = CellId)) +
geom_point() +
scale_color_brewwer(pallete = "Spectral")
#fig4a
ggplot(fig, aes(x=tSNE1, y=tSNE2, color = CellId)) +
geom_point() +
scale_color_brewer(pallete = "Spectral")
#fig4a
ggplot(fig, aes(x=tSNE1, y=tSNE2, color = CellId)) +
geom_point() +
scale_color_brewer(palette = "Spectral")
fig$Phenograph
#fig4a
ggplot(fig, aes(x=tSNE1, y=tSNE2, color = Phenograph)) +
geom_point() +
scale_color_brewer(palette = "Spectral")
#fig4a
ggplot(fig, aes(x=tSNE1, y=tSNE2, color = Phenograph)) +
geom_point() +
scale_color_continuous(palette = "Spectral")
#fig4a
ggplot(fig, aes(x=tSNE1, y=tSNE2, color = Phenograph)) +
geom_point() +
scale_color_continuous(type = "Spectral")
length(unique(fig$Phenograph))
#fig4a
ggplot(fig, aes(x=tSNE1, y=tSNE2, color = Phenograph)) +
geom_point() +
scale_color_continuous(type = "rainbow")
#fig4a
ggplot(fig, aes(x=tSNE1, y=tSNE2, fill = Phenograph)) +
geom_point() +
scale_fill_brewer(type = "rainbow")
#fig4a
ggplot(fig, aes(x=tSNE1, y=tSNE2, fill = Phenograph)) +
geom_point() +
scale_fill_brewer(palette =  "rainbow")
brewer.pal(7, "BrBG")
brewer.pal(25, "BrBG")
brewer.pal(25, "rainbow")
#fig4a
ggplot(fig, aes(x=tSNE1, y=tSNE2, fill = Phenograph)) +
geom_point() +
scale_color_continuous("RdBl")
#fig4a
ggplot(fig, aes(x=tSNE1, y=tSNE2, color = Phenograph)) +
geom_point() +
scale_color_continuous("RdBl")
#fig4a
ggplot(fig, aes(x=tSNE1, y=tSNE2, color = Phenograph)) +
geom_point() +
scale_color_continuous("rainbow")
#fig4a
ggplot(fig, aes(x=tSNE1, y=tSNE2, fill = Phenograph)) +
geom_point() +
scale_fill_gradient2(low="navy", mid="green", high="red",
midpoint=0, limits=range(short$pi0))
#fig4a
ggplot(fig, aes(x=tSNE1, y=tSNE2, fill = Phenograph)) +
geom_point() +
scale_fill_gradient2(low="navy", mid="green", high="red")
#fig4a
ggplot(fig, aes(x=tSNE1, y=tSNE2, color = Phenograph)) +
geom_point() +
scale_color_continuous("RdBl")
fig$Area
#fig4a
ggplot(fig, aes(x=tSNE1, y=tSNE2, color = fig$Area)) +
geom_point() +
scale_color_continuous("viridis")
fig$Macrophage
#fig4a
ggplot(fig, aes(x=tSNE1, y=tSNE2, color = Macrophage)) +
geom_point() +
scale_color_continuous("viridis")
#fig4a
ggplot(fig, aes(x=tSNE1, y=tSNE2, color = Fibro)) +
geom_point() +
scale_color_continuous("viridis")
#### Single cell associations in ST RA ###
#Load libraries
suppressMessages(suppressWarnings(library(plot3D,warn.conflicts = F, quietly = T)))
suppressMessages(suppressWarnings(library(gdata,warn.conflicts = F, quietly = T)))
suppressMessages(suppressWarnings(library(qdapTools,warn.conflicts = F, quietly = T)))
suppressMessages(suppressWarnings(library(data.table,warn.conflicts = F, quietly = T)))
suppressMessages(suppressWarnings(library(akima,warn.conflicts = F, quietly = T)))
suppressMessages(suppressWarnings(library(stringr,warn.conflicts = F, quietly = T)))
suppressMessages(suppressWarnings(library(ggplot2,warn.conflicts = F, quietly = T)))
suppressMessages(suppressWarnings(library(RColorBrewer,warn.conflicts = F, quietly = T)))
suppressMessages(suppressWarnings(library(cowplot,warn.conflicts = F, quietly = T)))
suppressMessages(suppressWarnings(library(reshape2,warn.conflicts = F, quietly = T)))
suppressMessages(suppressWarnings(library(dplyr,warn.conflicts = F, quietly = T)))
suppressMessages(suppressWarnings(library(ggpubr,warn.conflicts = F, quietly = T)))
setwd("/Users/sanjavickovic/Desktop/morphoSPOT/3dst_repo/3dst/cell_typing")
### This part of the code should be run when data on all samples is collected
# check if cell type abundance changes are significant in all samples
setwd("/Users/sanjavickovic/Desktop/morphoSPOT/3dst_repo/3dst/cell_typing")
fl = list.files(pattern = glob2rx("Average_sc_sigs_table_*"), path = path_output)
abun = matrix(nrow = 1, ncol = 9)
# Set output directory that will contain all cell_typing pdf plots and output gene files
path_output = "../../../plot_outputs/"
### This part of the code should be run when data on all samples is collected
# check if cell type abundance changes are significant in all samples
setwd("/Users/sanjavickovic/Desktop/morphoSPOT/3dst_repo/3dst/cell_typing")
fl = list.files(pattern = glob2rx("Average_sc_sigs_table_*"), path = path_output)
abun = matrix(nrow = 1, ncol = 9)
colnames(abun) = c("area","ct","Avg","inf","section","cluster" ,"ct_short","ra","sample")
for (f in fl){
scabun = read.csv(paste0(path_output, f), sep = "\t")
#print(f)
#print(colnames(scabun))
abun = rbind(abun, scabun)
ncol(scabun)
}
abun = abun[-1,]
abun
# do some renaming
nm = c(abun["ct"])
ctypes = ""
for (i in nm){
ctypes = c(ctypes, paste(sapply(strsplit(i, "_"), "[[", 3),sapply(strsplit(i, "_"), "[[", 4), sep = "_"))
}
ctypes = ctypes[-1]
abun["ct"] = ctypes
# first checks general changes in abundances in all samples (ex. b cells)
by_vs_am <- abun %>% group_by(sample, ct, section)
by_vs <- by_vs_am %>% summarise(meanct = mean(Avg))
for (j in unique(by_vs$ct)){
by_vs_ct = by_vs[by_vs$ct == j,]
print(paste0("checking cell type: ", j))
for (i in 1:6){
print(paste0("RA",i))
if (length(by_vs_ct[by_vs_ct$sample == paste0("RA",i),]$meanct)==0) next
if (t.test(by_vs_ct[by_vs_ct$sample == paste0("RA",i),]$meanct,by_vs_ct[by_vs_ct$sample != paste0("RA",i),]$meanct, alternative = "greater")$p.value < 0.05){
print("significant")
}
}
}
# first checks general changes in abundances in infiltrates (ex. b cells)
by_vs_am <- abun %>% group_by(sample, ct, section, inf)
newinf = ""
for (i in by_vs_am$inf){
newinf = c(newinf,substr(i, start = 1, stop = 3))
}
newinf = newinf[-1]
by_vs_am$inf = newinf
by_vs_am = by_vs_am[by_vs_am$inf == "inf",]
by_vs <- by_vs_am %>% summarise(meanct = mean(Avg))
for (j in unique(by_vs$ct)){
by_vs_ct = by_vs[by_vs$ct == j,]
print(paste0("checking cell type: ", j))
for (i in 1:6){
print(paste0("RA",i))
if (length(by_vs_ct[by_vs_ct$sample == paste0("RA",i),]$meanct)==0) {
print("no cells")
next}
if (t.test(by_vs_ct[by_vs_ct$sample == paste0("RA",i) & by_vs_ct$inf == "inf",]$meanct,by_vs_ct[by_vs_ct$sample != paste0("RA",i),]$meanct, alternative = "greater")$p.value < 0.05){
print("significant")
}
}
}
for (j in unique(by_vs$ct)){
by_vs_ct = by_vs[by_vs$ct == j,]
print(paste0("checking cell type: ", j))
for (i in 1:6){
print(paste0("RA",i))
if (length(by_vs_ct[by_vs_ct$sample == paste0("RA",i),]$meanct)==0) {
print("no cells")
next}
if (t.test(by_vs_ct[by_vs_ct$sample == paste0("RA",i) & by_vs_ct$inf == "inf",]$meanct,by_vs_ct[by_vs_ct$sample != paste0("RA",i),]$meanct, alternative = "two-sided")$p.value < 0.05){
print("significant")
}
}
}
for (j in unique(by_vs$ct)){
by_vs_ct = by_vs[by_vs$ct == j,]
print(paste0("checking cell type: ", j))
for (i in 1:6){
print(paste0("RA",i))
if (length(by_vs_ct[by_vs_ct$sample == paste0("RA",i),]$meanct)==0) {
print("no cells")
next}
if (t.test(by_vs_ct[by_vs_ct$sample == paste0("RA",i) & by_vs_ct$inf == "inf",]$meanct,by_vs_ct[by_vs_ct$sample != paste0("RA",i),]$meanct, alternative = "two.sided")$p.value < 0.05){
print("significant")
}
}
}
for (j in unique(by_vs$ct)){
by_vs_ct = by_vs[by_vs$ct == j,]
print(paste0("checking cell type: ", j))
for (i in 1:6){
print(paste0("RA",i))
if (length(by_vs_ct[by_vs_ct$sample == paste0("RA",i),]$meanct)==0) {
print("no cells")
next}
if (t.test(by_vs_ct[by_vs_ct$sample == paste0("RA",i) & by_vs_ct$inf == "inf",]$meanct,by_vs_ct[by_vs_ct$sample != paste0("RA",i),]$meanct, alternative = "two.sided", p.adjust.method = "BH")$p.value < 0.05){
print("significant")
}
}
}
for (j in unique(by_vs$ct)){
by_vs_ct = by_vs[by_vs$ct == j,]
print(paste0("checking cell type: ", j))
for (i in 1:6){
print(paste0("RA",i))
if (length(by_vs_ct[by_vs_ct$sample == paste0("RA",i),]$meanct)==0) {
print("no cells")
next}
if (t.test(by_vs_ct[by_vs_ct$sample == paste0("RA",i) & by_vs_ct$inf == "inf",]$meanct,by_vs_ct[by_vs_ct$sample != paste0("RA",i),]$meanct, alternative = "greater", p.adjust.method = "BH")$p.value < 0.05){
print("significant")
}
}
}
# first checks general changes in abundances in all samples (ex. b cells)
by_vs_am <- abun %>% group_by(sample, ct, section)
by_vs <- by_vs_am %>% summarise(meanct = mean(Avg))
# first checks general changes in abundances in all samples (ex. b cells)
by_vs_am <- abun %>% group_by(sample, ct, section)
by_vs <- by_vs_am %>% summarise(meanct = mean(Avg))
for (j in unique(by_vs$ct)){
by_vs_ct = by_vs[by_vs$ct == j,]
print(paste0("checking cell type: ", j))
for (i in 1:6){
print(paste0("RA",i))
if (length(by_vs_ct[by_vs_ct$sample == paste0("RA",i),]$meanct)==0) next
if (t.test(by_vs_ct[by_vs_ct$sample == paste0("RA",i),]$meanct,by_vs_ct[by_vs_ct$sample != paste0("RA",i),]$meanct alternative = "two.sided", p.adjust.method = "BH")$p.value < 0.05){
print("significant")
}
}
}
for (j in unique(by_vs$ct)){
by_vs_ct = by_vs[by_vs$ct == j,]
print(paste0("checking cell type: ", j))
for (i in 1:6){
print(paste0("RA",i))
if (length(by_vs_ct[by_vs_ct$sample == paste0("RA",i),]$meanct)==0) next
if (t.test(by_vs_ct[by_vs_ct$sample == paste0("RA",i),]$meanct,by_vs_ct[by_vs_ct$sample != paste0("RA",i),]$meanct ,alternative = "two.sided", p.adjust.method = "BH")$p.value < 0.05){
print("significant")
}
}
}
by_vs <- by_vs_am %>% summarise(meanct = mean(Avg))
for (j in unique(by_vs$ct)){
by_vs_ct = by_vs[by_vs$ct == j,]
print(paste0("checking cell type: ", j))
for (i in 1:6){
print(paste0("RA",i))
if (length(by_vs_ct[by_vs_ct$sample == paste0("RA",i),]$meanct)==0) next
if (t.test(by_vs_ct[by_vs_ct$sample == paste0("RA",i),]$meanct,by_vs_ct[by_vs_ct$sample != paste0("RA",i),]$meanct ,alternative = "greater", p.adjust.method = "BH")$p.value < 0.05){
print("significant")
}
}
}
# first checks general changes in abundances in all samples (ex. b cells)
by_vs_am <- abun %>% group_by(sample, ct, section)
by_vs <- by_vs_am %>% summarise(meanct = mean(Avg))
for (j in unique(by_vs$ct)){
by_vs_ct = by_vs[by_vs$ct == j,]
print(paste0("checking cell type: ", j))
for (i in 1:6){
print(paste0("RA",i))
if (length(by_vs_ct[by_vs_ct$sample == paste0("RA",i),]$meanct)==0) next
if (t.test(by_vs_ct[by_vs_ct$sample == paste0("RA",i),]$meanct,by_vs_ct[by_vs_ct$sample != paste0("RA",i),]$meanct ,alternative = "two.sided", p.adjust.method = "BH")$p.value < 0.05){
print("significant")
}
}
}
# first checks general changes in abundances in all samples (ex. b cells)
by_vs_am <- abun %>% group_by(sample, ct, section)
by_vs <- by_vs_am %>% summarise(meanct = mean(Avg))
for (j in unique(by_vs$ct)){
by_vs_ct = by_vs[by_vs$ct == j,]
print(paste0("checking cell type: ", j))
for (i in 1:6){
print(paste0("RA",i))
if (length(by_vs_ct[by_vs_ct$sample == paste0("RA",i),]$meanct)==0) next
if (t.test(by_vs_ct[by_vs_ct$sample == paste0("RA",i),]$meanct,by_vs_ct[by_vs_ct$sample != paste0("RA",i),]$meanct ,alternative = "greater", p.adjust.method = "BH")$p.value < 0.05){
print("significant")
}
}
}
# first checks general changes in abundances in all samples (ex. b cells)
by_vs_am <- abun %>% group_by(sample, ct, section)
by_vs <- by_vs_am %>% summarise(meanct = mean(Avg))
for (j in unique(by_vs$ct)){
by_vs_ct = by_vs[by_vs$ct == j,]
print(paste0("checking cell type: ", j))
for (i in 1:6){
print(paste0("RA",i))
if (length(by_vs_ct[by_vs_ct$sample == paste0("RA",i),]$meanct)==0) next
if (t.test(by_vs_ct[by_vs_ct$sample == paste0("RA",i),]$meanct,by_vs_ct[by_vs_ct$sample != paste0("RA",i),]$meanct ,alternative = "less", p.adjust.method = "BH")$p.value < 0.05){
print("significant")
}
}
}
# first checks general changes in abundances in infiltrates (ex. b cells)
by_vs_am <- abun %>% group_by(sample, ct, section, inf)
newinf = ""
for (i in by_vs_am$inf){
newinf = c(newinf,substr(i, start = 1, stop = 3))
}
newinf = newinf[-1]
by_vs_am$inf = newinf
by_vs_am = by_vs_am[by_vs_am$inf == "inf",]
by_vs <- by_vs_am %>% summarise(meanct = mean(Avg))
for (j in unique(by_vs$ct)){
by_vs_ct = by_vs[by_vs$ct == j,]
print(paste0("checking cell type: ", j))
for (i in 1:6){
print(paste0("RA",i))
if (length(by_vs_ct[by_vs_ct$sample == paste0("RA",i),]$meanct)==0) {
print("no cells")
next}
if (t.test(by_vs_ct[by_vs_ct$sample == paste0("RA",i) & by_vs_ct$inf == "inf",]$meanct,by_vs_ct[by_vs_ct$sample != paste0("RA",i),]$meanct, alternative = "greater", p.adjust.method = "BH")$p.value < 0.05){
print("significant")
}
}
}
